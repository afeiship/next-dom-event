{"version":3,"sources":["next-dom-event.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-dom-event.js","sourcesContent":["(function () {\n\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var document = global.document;\n  var FUNCTION = 'function';\n\n  var addEventListener = (function () {\n    if (document.addEventListener) {\n      return function (inElement, inName, inCallback, inCapture) {\n        inElement.addEventListener(inName, inCallback, inCapture || false);\n      };\n    } else if (document.attachEvent) {\n      return function (inElement, inName, inCallback) {\n        var name = 'on' + inName;\n        inElement.attachEvent(name, function (e) {\n          e = e || global.event;\n          e.target = e.target || e.srcElement;\n          e.currentTarget = node;\n          inCallback.call(node, e);\n        });\n      };\n    }\n  })();\n\n  var removeEventListener = (function () {\n    if (document.removeEventListener) {\n      return function (inElement, inName, inCallback, inCapture) {\n        inElement.removeEventListener(inName, inCallback, inCapture || false);\n      };\n    } else if (document.detachEvent) {\n      return function (inElement, inName, inCallback) {\n        var name = 'on' + inName;\n        inElement.detachEvent(name, function (e) {\n          e = e || global.event;\n          e.target = e.target || e.srcElement;\n          e.currentTarget = node;\n          inCallback.call(node, e);\n        });\n      };\n    }\n  })();\n\n  var NxDomEvent = nx.declare('nx.DomEvent', {\n    statics: {\n      on: function () {\n        var target = arguments[0];\n        var onFn = target.on;\n        if (typeof onFn === FUNCTION) {\n          return onFn.call.apply(onFn, arguments);\n        } else {\n          var args = nx.slice(arguments);\n          var context = args[0];\n          addEventListener.apply(context, args);\n          return {\n            destroy: function () {\n              return removeEventListener.apply(context, args);\n            }\n          };\n        }\n      }\n    }\n  });\n\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxDomEvent;\n  }\n\n}());\n"]}